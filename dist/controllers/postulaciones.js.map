{"version":3,"file":"postulaciones.js","names":["models","require","Op","Sequelize","getPorIdPostulante","req","res","paginaComoNumero","Number","parseInt","query","pagina","limiteComoNumero","limite","idPostulante","id","isNaN","postulaciones","findAndCountAll","limit","offset","include","as","model","postulantes","attributes","ofertas","empresas","where","fk_id_postulante","then","send","totalPaginas","Math","ceil","count","catch","sendStatus","getPorIdOferta","idOferta","fk_id_oferta","getConFiltros","findAll","postPostulaciones","create","body","postulante","oferta","fk_id_empresa","empresa","status","error","console","log","findPostulaciones","onSuccess","onNotFound","onError","findOne","getPorId","params","deletePostulacion","destroy","updatePostulaciones","update","fields","getCountPostulacionesPorOferta","consultapelada","postulanciones"],"sources":["../../src/controllers/postulaciones.js"],"sourcesContent":["const models = require(\"../../database/models\");\nconst { Op } = require(\"sequelize\");\nconst Sequelize = require(\"sequelize\");\n\n\nexport const getPorIdPostulante = async (req, res) => {\n\n  let paginaComoNumero = Number.parseInt(req.query.pagina);\n  let limiteComoNumero = Number.parseInt(req.query.limite);\n  let idPostulante = req.query.id;\n\n  let pagina = 0;\n  if (!Number.isNaN(paginaComoNumero) && paginaComoNumero > 0) {\n    pagina = paginaComoNumero;\n  }\n\n  let limite = 30;\n  if (!Number.isNaN(limiteComoNumero) && limiteComoNumero > 0) {\n    limite = limiteComoNumero;\n  }\n \n  models.postulaciones\n    .findAndCountAll({\n      limit: limite,\n      offset: pagina * limite,\n      include: [\n        {\n          as: \"Postulante\",\n          model: models.postulantes,\n          attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\n        },\n        {\n          as: \"Oferta\",\n          model: models.ofertas,\n          attributes: [\"id\", \"titulo_oferta\"],\n        },        \n        {\n          as: \"Empresa\",\n          model: models.empresas,\n          attributes: [\"id\", \"nombre_empresa\"],\n        },\n      ],\n      where: { fk_id_postulante: idPostulante },\n    })\n    .then((postulaciones) =>\n      res.send({\n        postulaciones,\n        totalPaginas: Math.ceil(postulaciones.count / limite),\n      })\n    )\n    .catch(() => res.sendStatus(500));\n};\n\nexport const getPorIdOferta = async (req, res) => {\n\n  let paginaComoNumero = Number.parseInt(req.query.pagina);\n  let limiteComoNumero = Number.parseInt(req.query.limite);\n  let idOferta = req.query.id;\n\n  let pagina = 0;\n  if (!Number.isNaN(paginaComoNumero) && paginaComoNumero > 0) {\n    pagina = paginaComoNumero;\n  }\n\n  let limite = 30;\n  if (!Number.isNaN(limiteComoNumero) && limiteComoNumero > 0) {\n    limite = limiteComoNumero;\n  }\n \n  models.postulaciones\n    .findAndCountAll({\n      limit: limite,\n      offset: pagina * limite,\n      include: [\n        {\n          as: \"Postulante\",\n          model: models.postulantes,\n          attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\n        },\n        {\n          as: \"Oferta\",\n          model: models.ofertas,\n          attributes: [\"id\", \"titulo_oferta\"],\n        },        \n        {\n          as: \"Empresa\",\n          model: models.empresas,\n          attributes: [\"id\", \"nombre_empresa\"],\n        },\n      ],\n      where: { fk_id_oferta: idOferta },\n    })\n    .then((postulaciones) =>\n      res.send({\n        postulaciones,\n        totalPaginas: Math.ceil(postulaciones.count / limite),\n      })\n    )\n    .catch(() => res.sendStatus(500));\n};\n\nexport const getConFiltros = async (req, res) => {\n  models.postulaciones\n    .findAll({\n    //Devolvemos los registros\n    include: [\n      {\n        as: \"Postulante\",\n        model: models.postulantes,\n        attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\n      },\n      {\n        as: \"Oferta\",\n        model: models.ofertas,\n        attributes: [\"id\", \"titulo_oferta\"],\n      },        \n      {\n        as: \"Empresa\",\n        model: models.empresas,\n        attributes: [\"id\", \"nombre_empresa\"],\n      },\n    ],\n    }).then(postulaciones => res.send({\n      postulaciones\n      \n    })).catch(() => res.sendStatus(500));\n};\n\nexport const postPostulaciones = async (req, res) => {\n  models.postulaciones\n    .create({ \n      fk_id_postulante: req.body.postulante,\n      fk_id_oferta: req.body.oferta,\n      fk_id_empresa: req.body.empresa,\n    })\n    .then(postulaciones => res.status(201).send({ id: postulaciones.id }),\n    )\n    .catch(error => {\n      if (error == \"SequelizeUniqueConstraintError: Validation error\") {\n        res.status(400).send('Bad request: una error')\n      }\n      else {\n        console.log(`Error al intentar insertar en la base de datos: ${error}`)\n        res.sendStatus(500)\n      }\n    });\n  };\n\n  const findPostulaciones= (id, { onSuccess, onNotFound, onError }) => {\n    models.postulaciones\n      .findOne({\n        include: [\n          {\n            as: \"Postulante\",\n            model: models.postulantes,\n            attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\n          },\n          {\n            as: \"Oferta\",\n            model: models.ofertas,\n            attributes: [\"id\", \"titulo_oferta\"],\n          },        \n          {\n            as: \"Empresa\",\n            model: models.empresas,\n            attributes: [\"id\", \"nombre_empresa\"],\n          },\n        ],\n        where: { id },\n      })\n      .then((postulaciones) => (postulaciones ? onSuccess(postulaciones) : onNotFound()))\n      .catch(() => onError());\n  };\n\n  export const getPorId = async (req, res) => {\n    findPostulaciones(req.params.id, {\n      onSuccess: (postulaciones) => res.send(postulaciones),\n      onNotFound: () => res.sendStatus(404),\n      onError: () => res.sendStatus(500),\n    });\n  };\n\n  export const deletePostulacion = async (req, res) => {\n    const onSuccess = postulaciones =>\n    postulaciones\n        .destroy()\n        .then(() => res.sendStatus(200))\n        .catch(() => res.sendStatus(500));\n      findPostulaciones(req.params.id, {\n      onSuccess,\n      onNotFound: () => res.sendStatus(404),\n      onError: () => res.sendStatus(500)\n    });\n  };\n\n  export const updatePostulaciones = async (req, res) => {\n    const onSuccess = (postulaciones) =>\n    postulaciones\n        .update(\n          {\n            fk_id_postulante: req.body.postulante,\n            fk_id_oferta: req.body.oferta,\n            fk_id_empresa: req.body.empresa,\n          },\n          { fields: [\"fk_id_postulante\", \"fk_id_oferta\", \"fk_id_empresa\"] }\n        )\n        .then(() => res.sendStatus(200))\n        .catch((error) => {\n          if (error == \"SequelizeUniqueConstraintError: Validation error\") {\n            res\n              .status(400)\n              .send(\"Bad request: Algun tipo de error de validacion de campos\");\n          } else {\n            console.log(\n              `Error al intentar actualizar la base de datos: ${error}`\n            );\n            res.sendStatus(500);\n          }\n        });\n        findPostulaciones(req.params.id, {\n      onSuccess,\n      onNotFound: () => res.sendStatus(404),\n      onError: () => res.sendStatus(500),\n    });\n  };\n\n\n  export const getCountPostulacionesPorOferta = async (req, res) => {\n    consultapelada = await Op.query(\"select fk_id_oferta as id_oferta, count(*) as cantidad_postulantes from postulaciones group by fk_id_oferta;\", {\n      model: models.postulanciones})\n      .then((consultapelada) =>\n        res.send({\n          consultapelada\n        })\n      )\n      .catch(() => res.sendStatus(500));\n  };\n\n\n"],"mappings":"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"}