{"version":3,"file":"postulaciones.js","names":["models","require","Op","Sequelize","getPorIdPostulante","req","res","paginaComoNumero","Number","parseInt","query","pagina","limiteComoNumero","limite","idPostulante","id","isNaN","postulaciones","findAndCountAll","limit","offset","include","as","model","postulantes","attributes","ofertas","empresas","where","fk_id_postulante","then","send","totalPaginas","Math","ceil","count","catch","sendStatus","getPorIdOferta","idOferta","fk_id_oferta","getConFiltros","findAll","postPostulaciones","create","body","postulante","oferta","fk_id_empresa","empresa","contactado","status","error","console","log","findPostulaciones","onSuccess","onNotFound","onError","findOne","getPorId","params","deletePostulacion","destroy","updatePostulaciones","update","fields","getCountPostulacionesPorOferta","consultapelada","postulanciones"],"sources":["../../src/controllers/postulaciones.js"],"sourcesContent":["const models = require(\"../../database/models\");\r\nconst { Op } = require(\"sequelize\");\r\nconst Sequelize = require(\"sequelize\");\r\n\r\n\r\nexport const getPorIdPostulante = async (req, res) => {\r\n\r\n  let paginaComoNumero = Number.parseInt(req.query.pagina);\r\n  let limiteComoNumero = Number.parseInt(req.query.limite);\r\n  let idPostulante = req.query.id;\r\n\r\n  let pagina = 0;\r\n  if (!Number.isNaN(paginaComoNumero) && paginaComoNumero > 0) {\r\n    pagina = paginaComoNumero;\r\n  }\r\n\r\n  let limite = 30;\r\n  if (!Number.isNaN(limiteComoNumero) && limiteComoNumero > 0) {\r\n    limite = limiteComoNumero;\r\n  }\r\n \r\n  models.postulaciones\r\n    .findAndCountAll({\r\n      limit: limite,\r\n      offset: pagina * limite,\r\n      include: [\r\n        {\r\n          as: \"Postulante\",\r\n          model: models.postulantes,\r\n          attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\r\n        },\r\n        {\r\n          as: \"Oferta\",\r\n          model: models.ofertas,\r\n          attributes: [\"id\", \"titulo_oferta\"],\r\n        },        \r\n        {\r\n          as: \"Empresa\",\r\n          model: models.empresas,\r\n          attributes: [\"id\", \"nombre_empresa\"],\r\n        },\r\n      ],\r\n      where: { fk_id_postulante: idPostulante },\r\n    })\r\n    .then((postulaciones) =>\r\n      res.send({\r\n        postulaciones,\r\n        totalPaginas: Math.ceil(postulaciones.count / limite),\r\n      })\r\n    )\r\n    .catch(() => res.sendStatus(500));\r\n};\r\n\r\nexport const getPorIdOferta = async (req, res) => {\r\n\r\n  let paginaComoNumero = Number.parseInt(req.query.pagina);\r\n  let limiteComoNumero = Number.parseInt(req.query.limite);\r\n  let idOferta = req.query.id;\r\n\r\n  let pagina = 0;\r\n  if (!Number.isNaN(paginaComoNumero) && paginaComoNumero > 0) {\r\n    pagina = paginaComoNumero;\r\n  }\r\n\r\n  let limite = 30;\r\n  if (!Number.isNaN(limiteComoNumero) && limiteComoNumero > 0) {\r\n    limite = limiteComoNumero;\r\n  }\r\n \r\n  models.postulaciones\r\n    .findAndCountAll({\r\n      limit: limite,\r\n      offset: pagina * limite,\r\n      include: [\r\n        {\r\n          as: \"Postulante\",\r\n          model: models.postulantes,\r\n          attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\",\"foto\",\"cv\"],\r\n        },\r\n        {\r\n          as: \"Oferta\",\r\n          model: models.ofertas,\r\n          attributes: [\"id\", \"titulo_oferta\"],\r\n        },        \r\n        {\r\n          as: \"Empresa\",\r\n          model: models.empresas,\r\n          attributes: [\"id\", \"nombre_empresa\"],\r\n        },\r\n      ],\r\n      where: { fk_id_oferta: idOferta },\r\n    })\r\n    .then((postulaciones) =>\r\n      res.send({\r\n        postulaciones,\r\n        totalPaginas: Math.ceil(postulaciones.count / limite),\r\n      })\r\n    )\r\n    .catch(() => res.sendStatus(500));\r\n};\r\n\r\nexport const getConFiltros = async (req, res) => {\r\n  models.postulaciones\r\n    .findAll({\r\n    //Devolvemos los registros\r\n    include: [\r\n      {\r\n        as: \"Postulante\",\r\n        model: models.postulantes,\r\n        attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\r\n      },\r\n      {\r\n        as: \"Oferta\",\r\n        model: models.ofertas,\r\n        attributes: [\"id\", \"titulo_oferta\"],\r\n      },        \r\n      {\r\n        as: \"Empresa\",\r\n        model: models.empresas,\r\n        attributes: [\"id\", \"nombre_empresa\"],\r\n      },\r\n    ],\r\n    }).then(postulaciones => res.send({\r\n      postulaciones\r\n      \r\n    })).catch(() => res.sendStatus(500));\r\n};\r\n\r\nexport const postPostulaciones = async (req, res) => {\r\n  models.postulaciones\r\n    .create({ \r\n      fk_id_postulante: req.body.postulante,\r\n      fk_id_oferta: req.body.oferta,\r\n      fk_id_empresa: req.body.empresa,\r\n      contactado: \"f\",\r\n    })\r\n    .then(postulaciones => res.status(201).send({ id: postulaciones.id }),\r\n    )\r\n    .catch(error => {\r\n      if (error == \"SequelizeUniqueConstraintError: Validation error\") {\r\n        res.status(400).send('Bad request: una error')\r\n      }\r\n      else {\r\n        console.log(`Error al intentar insertar en la base de datos: ${error}`)\r\n        res.sendStatus(500)\r\n      }\r\n    });\r\n  };\r\n\r\n  const findPostulaciones= (id, { onSuccess, onNotFound, onError }) => {\r\n    models.postulaciones\r\n      .findOne({\r\n        include: [\r\n          {\r\n            as: \"Postulante\",\r\n            model: models.postulantes,\r\n            attributes: [\"id\", \"nombre\", \"apellido\",\"fk_id_usuario\",\"telefono\"],\r\n          },\r\n          {\r\n            as: \"Oferta\",\r\n            model: models.ofertas,\r\n            attributes: [\"id\", \"titulo_oferta\"],\r\n          },        \r\n          {\r\n            as: \"Empresa\",\r\n            model: models.empresas,\r\n            attributes: [\"id\", \"nombre_empresa\"],\r\n          },\r\n        ],\r\n        where: { id },\r\n      })\r\n      .then((postulaciones) => (postulaciones ? onSuccess(postulaciones) : onNotFound()))\r\n      .catch(() => onError());\r\n  };\r\n\r\n  export const getPorId = async (req, res) => {\r\n    findPostulaciones(req.params.id, {\r\n      onSuccess: (postulaciones) => res.send(postulaciones),\r\n      onNotFound: () => res.sendStatus(404),\r\n      onError: () => res.sendStatus(500),\r\n    });\r\n  };\r\n\r\n  export const deletePostulacion = async (req, res) => {\r\n    const onSuccess = postulaciones =>\r\n    postulaciones\r\n        .destroy()\r\n        .then(() => res.sendStatus(200))\r\n        .catch(() => res.sendStatus(500));\r\n      findPostulaciones(req.params.id, {\r\n      onSuccess,\r\n      onNotFound: () => res.sendStatus(404),\r\n      onError: () => res.sendStatus(500)\r\n    });\r\n  };\r\n\r\n  export const updatePostulaciones = async (req, res) => {\r\n    const onSuccess = (postulaciones) =>\r\n    postulaciones\r\n        .update(\r\n          {\r\n            fk_id_postulante: req.body.postulante,\r\n            fk_id_oferta: req.body.oferta,\r\n            fk_id_empresa: req.body.empresa,\r\n            contactado: req.body.contactado,\r\n          },\r\n          { fields: [\"fk_id_postulante\", \"fk_id_oferta\", \"fk_id_empresa\", \"contactado\"] }\r\n        )\r\n        .then(() => res.sendStatus(200))\r\n        .catch((error) => {\r\n          if (error == \"SequelizeUniqueConstraintError: Validation error\") {\r\n            res\r\n              .status(400)\r\n              .send(\"Bad request: Algun tipo de error de validacion de campos\");\r\n          } else {\r\n            console.log(\r\n              `Error al intentar actualizar la base de datos: ${error}`\r\n            );\r\n            res.sendStatus(500);\r\n          }\r\n        });\r\n        findPostulaciones(req.params.id, {\r\n      onSuccess,\r\n      onNotFound: () => res.sendStatus(404),\r\n      onError: () => res.sendStatus(500),\r\n    });\r\n  };\r\n\r\n\r\n  export const getCountPostulacionesPorOferta = async (req, res) => {\r\n    consultapelada = await Op.query(\"select fk_id_oferta as id_oferta, count(*) as cantidad_postulantes from postulaciones group by fk_id_oferta;\", {\r\n      model: models.postulanciones})\r\n      .then((consultapelada) =>\r\n        res.send({\r\n          consultapelada\r\n        })\r\n      )\r\n      .catch(() => res.sendStatus(500));\r\n  };\r\n\r\n\r\n"],"mappings":"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"}