{"version":3,"file":"empresas.js","names":["models","require","Op","getConFiltros","req","res","paginaComoNumero","Number","parseInt","query","pagina","limiteComoNumero","limite","ordenarPor","ordenar","nombreEmpresa","idEstado","isNaN","replace","empresas","findAndCountAll","limit","offset","include","as","model","usuarios","attributes","rubros","estado_empresas","provincias","ciudades","where","and","nombre_empresa","iLike","fk_id_estado","eq","order","then","send","totalPaginas","Math","ceil","count","catch","sendStatus","getPeladas","findEmpresas","id","onSuccess","onNotFound","onError","findOne","getPorId","params","findEmpresasPorIdUsuario","fk_id_usuario","getPorIdUsuario","deleteEmpresa","destroy","postEmpresa","create","body","cuit","idUsuario","fk_id_rubro","idRubro","descripcion","pais","fk_id_provincia","provincia","fk_id_ciudad","ciudad","calle","nro","piso","depto","cp","telefono","web","nombre_representante","nombreRepresentante","email_representante","emailRepresentante","logo","status","error","console","log","updateEmpresa","update","fields","patchEmpresa","changeGroup","id_usuario","fk_id_grupo","estado"],"sources":["../../src/controllers/empresas.js"],"sourcesContent":["const models = require(\"../../database/models\");\r\nconst { Op } = require(\"sequelize\");\r\n\r\n\r\n//get de empresas\r\nexport const getConFiltros = async (req, res) => {\r\n  let paginaComoNumero = Number.parseInt(req.query.pagina);\r\n  let limiteComoNumero = Number.parseInt(req.query.limite);\r\n  let ordenarPor = req.query.ordenar;\r\n  let nombreEmpresa = req.query.nombreEmpresa;\r\n  let idEstado = req.query.idEstado;\r\n\r\n  let pagina = 0;\r\n  if (!Number.isNaN(paginaComoNumero) && paginaComoNumero > 0) {\r\n    pagina = paginaComoNumero;\r\n  }\r\n\r\n  let limite = 30;\r\n  if (!Number.isNaN(limiteComoNumero) && limiteComoNumero > 0) {\r\n    limite = limiteComoNumero;\r\n  }\r\n  if (typeof ordenarPor === \"undefined\") {\r\n    ordenarPor = \"createdAt\";\r\n  }\r\n\r\n  if (typeof nombreEmpresa === \"undefined\") {\r\n    nombreEmpresa = \"_\";\r\n  } else {\r\n    nombreEmpresa = req.query.nombreEmpresa.replace(/\\s/g, \"%\");\r\n  }\r\n\r\n  if (typeof idEstado === \"undefined\") {\r\n    idEstado = 1;\r\n }\r\n\r\n  models.empresas\r\n    .findAndCountAll({\r\n      limit: limite,\r\n      offset: pagina * limite,\r\n      include: [\r\n        {\r\n          as: \"Usuario\",\r\n          model: models.usuarios,\r\n          attributes: [\"id\", \"usuario\"],\r\n        },\r\n        {\r\n          as: \"Rubro\",\r\n          model: models.rubros,\r\n          attributes: [\"id\", \"nombre_rubro\"],\r\n        },\r\n        {\r\n          as: \"Estado\",\r\n          model: models.estado_empresas,\r\n          attributes: [\"id\", \"nombre_estado\"],\r\n        },\r\n        {\r\n          as: \"Provincia\",\r\n          model: models.provincias,\r\n          attributes: [\"id\", \"nombre\"],\r\n        },\r\n        {\r\n          as: \"Ciudad\",\r\n          model: models.ciudades,\r\n          attributes: [\"id\", \"nombre\", \"fk_id_provincia\"],\r\n        },\r\n      ],\r\n      where: {\r\n        [Op.and]: [\r\n          {\r\n            nombre_empresa: {\r\n              [Op.iLike]: `%${nombreEmpresa}%`,\r\n            },\r\n            fk_id_estado: {\r\n              [Op.eq]: idEstado\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      order: [ordenarPor],\r\n    })\r\n    .then((empresas) =>\r\n      res.send({\r\n        empresas,\r\n        totalPaginas: Math.ceil(empresas.count / limite),\r\n      })\r\n    )\r\n    .catch(() => res.sendStatus(500));\r\n};\r\n\r\nexport const getPeladas = async (req, res) => {\r\n  let pagina = 0;\r\n  let limite = 1000;\r\n\r\n  models.empresas\r\n    .findAndCountAll({\r\n      limit: limite,\r\n      offset: pagina * limite,\r\n      include: [\r\n        {\r\n          as: \"Usuario\",\r\n          model: models.usuarios,\r\n          attributes: [\"id\", \"usuario\"],\r\n        },\r\n        {\r\n          as: \"Rubro\",\r\n          model: models.rubros,\r\n          attributes: [\"id\", \"nombre_rubro\"],\r\n        },\r\n        {\r\n          as: \"Estado\",\r\n          model: models.estado_empresas,\r\n          attributes: [\"id\", \"nombre_estado\"],\r\n        },\r\n        {\r\n          as: \"Provincia\",\r\n          model: models.provincias,\r\n          attributes: [\"id\", \"nombre\"],\r\n        },\r\n        {\r\n          as: \"Ciudad\",\r\n          model: models.ciudades,\r\n          attributes: [\"id\", \"nombre\", \"fk_id_provincia\"],\r\n        },\r\n      ],\r\n    })\r\n    .then((empresas) =>\r\n      res.send({\r\n        empresas,\r\n        totalPaginas: Math.ceil(empresas.count / limite),\r\n      })\r\n    )\r\n    .catch(() => res.sendStatus(500));\r\n};\r\n\r\nconst findEmpresas= (id, { onSuccess, onNotFound, onError }) => {\r\n  models.empresas\r\n    .findOne({\r\n      include: [\r\n        {\r\n          as: \"Usuario\",\r\n          model: models.usuarios,\r\n          attributes: [\"id\", \"usuario\"],\r\n        },\r\n        {\r\n          as: \"Rubro\",\r\n          model: models.rubros,\r\n          attributes: [\"id\", \"nombre_rubro\"],\r\n        },\r\n        {\r\n          as: \"Estado\",\r\n          model: models.estado_empresas,\r\n          attributes: [\"id\", \"nombre_estado\"],\r\n        },\r\n        {\r\n          as: \"Provincia\",\r\n          model: models.provincias,\r\n          attributes: [\"id\", \"nombre\"],\r\n        },\r\n        {\r\n          as: \"Ciudad\",\r\n          model: models.ciudades,\r\n          attributes: [\"id\", \"nombre\", \"fk_id_provincia\"],\r\n        },\r\n      ],\r\n      where: { id },\r\n    })\r\n    .then((empresas) => (empresas ? onSuccess(empresas) : onNotFound()))\r\n    .catch(() => onError());\r\n};\r\n\r\nexport const getPorId = async (req, res) => {\r\n  findEmpresas(req.params.id, {\r\n    onSuccess: (empresas) => res.send(empresas),\r\n    onNotFound: () => res.sendStatus(404),\r\n    onError: () => res.sendStatus(500),\r\n  });\r\n};\r\n\r\nconst findEmpresasPorIdUsuario = (fk_id_usuario, { onSuccess, onNotFound, onError }) => {\r\n  models.empresas\r\n    .findOne({\r\n      include: [\r\n        {\r\n          as: \"Usuario\",\r\n          model: models.usuarios,\r\n          attributes: [\"id\", \"usuario\"],\r\n        },\r\n        {\r\n          as: \"Rubro\",\r\n          model: models.rubros,\r\n          attributes: [\"id\", \"nombre_rubro\"],\r\n        },\r\n        {\r\n          as: \"Estado\",\r\n          model: models.estado_empresas,\r\n          attributes: [\"id\", \"nombre_estado\"],\r\n        },\r\n        {\r\n          as: \"Provincia\",\r\n          model: models.provincias,\r\n          attributes: [\"id\", \"nombre\"],\r\n        },\r\n        {\r\n          as: \"Ciudad\",\r\n          model: models.ciudades,\r\n          attributes: [\"id\", \"nombre\", \"fk_id_provincia\"],\r\n        },\r\n      ],\r\n      where: { fk_id_usuario },\r\n    })\r\n    .then((empresas) => (empresas ? onSuccess(empresas) : onNotFound()))\r\n    .catch(() => onError());\r\n};\r\n\r\nexport const getPorIdUsuario = async (req, res) => {\r\n  findEmpresasPorIdUsuario(req.params.id, {\r\n    onSuccess: (empresas) => res.send(empresas),\r\n    onNotFound: () => res.sendStatus(404),\r\n    onError: () => res.sendStatus(500),\r\n  });\r\n};\r\n\r\nexport const deleteEmpresa = async (req, res) => {\r\n  const onSuccess = empresas =>\r\n  empresas\r\n      .destroy()\r\n      .then(() => res.sendStatus(200))\r\n      .catch(() => res.sendStatus(500));\r\n  findEmpresas(req.params.id, {\r\n    onSuccess,\r\n    onNotFound: () => res.sendStatus(404),\r\n    onError: () => res.sendStatus(500)\r\n  });\r\n};\r\n\r\nexport const postEmpresa = async (req, res) => {\r\n  models.empresas\r\n    .create({\r\n      id:  req.body.cuit,\r\n      fk_id_usuario: req.body.idUsuario,     \r\n      fk_id_rubro: req.body.idRubro,          \r\n      fk_id_estado: 2,         \r\n      nombre_empresa: req.body.nombreEmpresa,       \r\n      descripcion: req.body.descripcion,          \r\n      pais: req.body.pais,                \r\n      fk_id_provincia: req.body.provincia,            \r\n      fk_id_ciudad: req.body.ciudad,               \r\n      calle: req.body.calle,                \r\n      nro: req.body.nro,                  \r\n      piso: req.body.piso,                 \r\n      depto: req.body.depto,                \r\n      cp: req.body.cp,                   \r\n      telefono: req.body.telefono,             \r\n      web: req.body.web,                  \r\n      nombre_representante: req.body.nombreRepresentante, \r\n      email_representante: req.body.emailRepresentante,  \r\n      logo: \"logo.jpg\" \r\n    })\r\n    .then(\r\n      (empresas) => res.status(201).send({ id: empresas.id }))\r\n\r\n    .catch((error) => {\r\n      if (error == \"SequelizeUniqueConstraintError: Validation error\") {\r\n        res.status(401).send(\"Bad request: Algun tipo de error de validacion de campos\");\r\n      } else {\r\n        console.log(`Error al intentar insertar en la base de datos: ${error}`);\r\n        res.sendStatus(500);\r\n      }\r\n    });\r\n};\r\n\r\nexport const updateEmpresa = async (req, res) => {\r\n  const onSuccess = (empresas) =>\r\n  empresas\r\n      .update(\r\n        {\r\n          fk_id_usuario: req.body.idUsuario,     \r\n          fk_id_rubro: req.body.idRubro,          \r\n          fk_id_estado: req.body.idEstado,         \r\n          nombre_empresa: req.body.nombreEmpresa,       \r\n          descripcion: req.body.descripcion,          \r\n          pais: req.body.pais,                \r\n          fk_id_provincia: req.body.provincia,            \r\n          fk_id_ciudad: req.body.ciudad,               \r\n          calle: req.body.calle,                \r\n          nro: req.body.nro,                  \r\n          piso: req.body.piso,                 \r\n          depto: req.body.depto,                \r\n          cp: req.body.cp,                   \r\n          telefono: req.body.telefono,             \r\n          web: req.body.web,                  \r\n          nombre_representante: req.body.nombreRepresentante, \r\n          email_representante: req.body.emailRepresentante, \r\n        },\r\n        { fields: [\"fk_id_usuario\", \"fk_id_rubro\", \"fk_id_estado\",\"nombre_empresa\",\"descripcion\",\"pais\",\"fk_id_provincia\",\"descripcion\",\"fk_id_ciudad\",\"calle\",\"nro\",\"piso\",\"depto\",\"cp\",\"telefono\",\"web\",\"nombre_representante\",\"email_representante\"] }\r\n      )\r\n      .then(() => res.sendStatus(200)\r\n      )\r\n      .catch((error) => {\r\n        if (error == \"SequelizeUniqueConstraintError: Validation error\") {\r\n          res\r\n            .status(400)\r\n            .send(\"Bad request: Algun tipo de error de validacion de campos\");\r\n        } else {\r\n          console.log(\r\n            `Error al intentar actualizar la base de datos: ${error}`\r\n          );\r\n          res.sendStatus(500);\r\n        }\r\n      });\r\n      findEmpresas(req.params.id, {\r\n    onSuccess,\r\n    onNotFound: () => res.sendStatus(404),\r\n    onError: () => res.sendStatus(500),\r\n  });\r\n};\r\n\r\n//Con esto cambiamos el estado de una empresa desde administrador.\r\nexport const patchEmpresa = async (req, res) => {\r\n  const onSuccess = (empresas) =>\r\n  empresas\r\n      .update(\r\n        {          \r\n          fk_id_estado: 1,\r\n        },\r\n        { fields: [\"fk_id_estado\"] }\r\n      ).then(() => res.sendStatus(200),\r\n      changeGroup(empresas.fk_id_usuario),\r\n      console.log(empresas.fk_id_usuario)\r\n      ).catch((error) => {res.status(400)});\r\n\r\n      findEmpresas(req.params.id, {\r\n    onSuccess,\r\n    onNotFound: () => res.sendStatus(404),\r\n    onError: () => res.sendStatus(500),\r\n  });\r\n};\r\n\r\n//Con esto cambiamos el grupo del usuario para que sea empresa.\r\nconst changeGroup = (id_usuario) => {\r\n  models.usuarios.update(\r\n    { fk_id_grupo: 2,\r\n      estado: 't' },\r\n    {\r\n      where: {\r\n        id: id_usuario,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\n"],"mappings":";;;;;;;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,MAAM;EAAEC;AAAF,IAASD,OAAO,CAAC,WAAD,CAAtB,C,CAGA;;;AACO,MAAME,aAAa,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;EAC/C,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,QAAP,CAAgBJ,GAAG,CAACK,KAAJ,CAAUC,MAA1B,CAAvB;EACA,IAAIC,gBAAgB,GAAGJ,MAAM,CAACC,QAAP,CAAgBJ,GAAG,CAACK,KAAJ,CAAUG,MAA1B,CAAvB;EACA,IAAIC,UAAU,GAAGT,GAAG,CAACK,KAAJ,CAAUK,OAA3B;EACA,IAAIC,aAAa,GAAGX,GAAG,CAACK,KAAJ,CAAUM,aAA9B;EACA,IAAIC,QAAQ,GAAGZ,GAAG,CAACK,KAAJ,CAAUO,QAAzB;EAEA,IAAIN,MAAM,GAAG,CAAb;;EACA,IAAI,CAACH,MAAM,CAACU,KAAP,CAAaX,gBAAb,CAAD,IAAmCA,gBAAgB,GAAG,CAA1D,EAA6D;IAC3DI,MAAM,GAAGJ,gBAAT;EACD;;EAED,IAAIM,MAAM,GAAG,EAAb;;EACA,IAAI,CAACL,MAAM,CAACU,KAAP,CAAaN,gBAAb,CAAD,IAAmCA,gBAAgB,GAAG,CAA1D,EAA6D;IAC3DC,MAAM,GAAGD,gBAAT;EACD;;EACD,IAAI,OAAOE,UAAP,KAAsB,WAA1B,EAAuC;IACrCA,UAAU,GAAG,WAAb;EACD;;EAED,IAAI,OAAOE,aAAP,KAAyB,WAA7B,EAA0C;IACxCA,aAAa,GAAG,GAAhB;EACD,CAFD,MAEO;IACLA,aAAa,GAAGX,GAAG,CAACK,KAAJ,CAAUM,aAAV,CAAwBG,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAAhB;EACD;;EAED,IAAI,OAAOF,QAAP,KAAoB,WAAxB,EAAqC;IACnCA,QAAQ,GAAG,CAAX;EACF;;EAEAhB,MAAM,CAACmB,QAAP,CACGC,eADH,CACmB;IACfC,KAAK,EAAET,MADQ;IAEfU,MAAM,EAAEZ,MAAM,GAAGE,MAFF;IAGfW,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,SADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC0B,QAFhB;MAGEC,UAAU,EAAE,CAAC,IAAD,EAAO,SAAP;IAHd,CADO,EAMP;MACEH,EAAE,EAAE,OADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC4B,MAFhB;MAGED,UAAU,EAAE,CAAC,IAAD,EAAO,cAAP;IAHd,CANO,EAWP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC6B,eAFhB;MAGEF,UAAU,EAAE,CAAC,IAAD,EAAO,eAAP;IAHd,CAXO,EAgBP;MACEH,EAAE,EAAE,WADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC8B,UAFhB;MAGEH,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP;IAHd,CAhBO,EAqBP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC+B,QAFhB;MAGEJ,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,iBAAjB;IAHd,CArBO,CAHM;IA8BfK,KAAK,EAAE;MACL,CAAC9B,EAAE,CAAC+B,GAAJ,GAAU,CACR;QACEC,cAAc,EAAE;UACd,CAAChC,EAAE,CAACiC,KAAJ,GAAa,IAAGpB,aAAc;QADhB,CADlB;QAIEqB,YAAY,EAAE;UACZ,CAAClC,EAAE,CAACmC,EAAJ,GAASrB;QADG;MAJhB,CADQ;IADL,CA9BQ;IA0CfsB,KAAK,EAAE,CAACzB,UAAD;EA1CQ,CADnB,EA6CG0B,IA7CH,CA6CSpB,QAAD,IACJd,GAAG,CAACmC,IAAJ,CAAS;IACPrB,QADO;IAEPsB,YAAY,EAAEC,IAAI,CAACC,IAAL,CAAUxB,QAAQ,CAACyB,KAAT,GAAiBhC,MAA3B;EAFP,CAAT,CA9CJ,EAmDGiC,KAnDH,CAmDS,MAAMxC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAnDf;AAoDD,CAlFM;;;;AAoFA,MAAMC,UAAU,GAAG,OAAO3C,GAAP,EAAYC,GAAZ,KAAoB;EAC5C,IAAIK,MAAM,GAAG,CAAb;EACA,IAAIE,MAAM,GAAG,IAAb;EAEAZ,MAAM,CAACmB,QAAP,CACGC,eADH,CACmB;IACfC,KAAK,EAAET,MADQ;IAEfU,MAAM,EAAEZ,MAAM,GAAGE,MAFF;IAGfW,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,SADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC0B,QAFhB;MAGEC,UAAU,EAAE,CAAC,IAAD,EAAO,SAAP;IAHd,CADO,EAMP;MACEH,EAAE,EAAE,OADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC4B,MAFhB;MAGED,UAAU,EAAE,CAAC,IAAD,EAAO,cAAP;IAHd,CANO,EAWP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC6B,eAFhB;MAGEF,UAAU,EAAE,CAAC,IAAD,EAAO,eAAP;IAHd,CAXO,EAgBP;MACEH,EAAE,EAAE,WADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC8B,UAFhB;MAGEH,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP;IAHd,CAhBO,EAqBP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC+B,QAFhB;MAGEJ,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,iBAAjB;IAHd,CArBO;EAHM,CADnB,EAgCGY,IAhCH,CAgCSpB,QAAD,IACJd,GAAG,CAACmC,IAAJ,CAAS;IACPrB,QADO;IAEPsB,YAAY,EAAEC,IAAI,CAACC,IAAL,CAAUxB,QAAQ,CAACyB,KAAT,GAAiBhC,MAA3B;EAFP,CAAT,CAjCJ,EAsCGiC,KAtCH,CAsCS,MAAMxC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAtCf;AAuCD,CA3CM;;;;AA6CP,MAAME,YAAY,GAAE,CAACC,EAAD,EAAK;EAAEC,SAAF;EAAaC,UAAb;EAAyBC;AAAzB,CAAL,KAA4C;EAC9DpD,MAAM,CAACmB,QAAP,CACGkC,OADH,CACW;IACP9B,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,SADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC0B,QAFhB;MAGEC,UAAU,EAAE,CAAC,IAAD,EAAO,SAAP;IAHd,CADO,EAMP;MACEH,EAAE,EAAE,OADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC4B,MAFhB;MAGED,UAAU,EAAE,CAAC,IAAD,EAAO,cAAP;IAHd,CANO,EAWP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC6B,eAFhB;MAGEF,UAAU,EAAE,CAAC,IAAD,EAAO,eAAP;IAHd,CAXO,EAgBP;MACEH,EAAE,EAAE,WADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC8B,UAFhB;MAGEH,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP;IAHd,CAhBO,EAqBP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC+B,QAFhB;MAGEJ,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,iBAAjB;IAHd,CArBO,CADF;IA4BPK,KAAK,EAAE;MAAEiB;IAAF;EA5BA,CADX,EA+BGV,IA/BH,CA+BSpB,QAAD,IAAeA,QAAQ,GAAG+B,SAAS,CAAC/B,QAAD,CAAZ,GAAyBgC,UAAU,EA/BlE,EAgCGN,KAhCH,CAgCS,MAAMO,OAAO,EAhCtB;AAiCD,CAlCD;;AAoCO,MAAME,QAAQ,GAAG,OAAOlD,GAAP,EAAYC,GAAZ,KAAoB;EAC1C2C,YAAY,CAAC5C,GAAG,CAACmD,MAAJ,CAAWN,EAAZ,EAAgB;IAC1BC,SAAS,EAAG/B,QAAD,IAAcd,GAAG,CAACmC,IAAJ,CAASrB,QAAT,CADC;IAE1BgC,UAAU,EAAE,MAAM9C,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFQ;IAG1BM,OAAO,EAAE,MAAM/C,GAAG,CAACyC,UAAJ,CAAe,GAAf;EAHW,CAAhB,CAAZ;AAKD,CANM;;;;AAQP,MAAMU,wBAAwB,GAAG,CAACC,aAAD,EAAgB;EAAEP,SAAF;EAAaC,UAAb;EAAyBC;AAAzB,CAAhB,KAAuD;EACtFpD,MAAM,CAACmB,QAAP,CACGkC,OADH,CACW;IACP9B,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,SADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC0B,QAFhB;MAGEC,UAAU,EAAE,CAAC,IAAD,EAAO,SAAP;IAHd,CADO,EAMP;MACEH,EAAE,EAAE,OADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC4B,MAFhB;MAGED,UAAU,EAAE,CAAC,IAAD,EAAO,cAAP;IAHd,CANO,EAWP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC6B,eAFhB;MAGEF,UAAU,EAAE,CAAC,IAAD,EAAO,eAAP;IAHd,CAXO,EAgBP;MACEH,EAAE,EAAE,WADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC8B,UAFhB;MAGEH,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP;IAHd,CAhBO,EAqBP;MACEH,EAAE,EAAE,QADN;MAEEC,KAAK,EAAEzB,MAAM,CAAC+B,QAFhB;MAGEJ,UAAU,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,iBAAjB;IAHd,CArBO,CADF;IA4BPK,KAAK,EAAE;MAAEyB;IAAF;EA5BA,CADX,EA+BGlB,IA/BH,CA+BSpB,QAAD,IAAeA,QAAQ,GAAG+B,SAAS,CAAC/B,QAAD,CAAZ,GAAyBgC,UAAU,EA/BlE,EAgCGN,KAhCH,CAgCS,MAAMO,OAAO,EAhCtB;AAiCD,CAlCD;;AAoCO,MAAMM,eAAe,GAAG,OAAOtD,GAAP,EAAYC,GAAZ,KAAoB;EACjDmD,wBAAwB,CAACpD,GAAG,CAACmD,MAAJ,CAAWN,EAAZ,EAAgB;IACtCC,SAAS,EAAG/B,QAAD,IAAcd,GAAG,CAACmC,IAAJ,CAASrB,QAAT,CADa;IAEtCgC,UAAU,EAAE,MAAM9C,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFoB;IAGtCM,OAAO,EAAE,MAAM/C,GAAG,CAACyC,UAAJ,CAAe,GAAf;EAHuB,CAAhB,CAAxB;AAKD,CANM;;;;AAQA,MAAMa,aAAa,GAAG,OAAOvD,GAAP,EAAYC,GAAZ,KAAoB;EAC/C,MAAM6C,SAAS,GAAG/B,QAAQ,IAC1BA,QAAQ,CACHyC,OADL,GAEKrB,IAFL,CAEU,MAAMlC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFhB,EAGKD,KAHL,CAGW,MAAMxC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAHjB,CADA;;EAKAE,YAAY,CAAC5C,GAAG,CAACmD,MAAJ,CAAWN,EAAZ,EAAgB;IAC1BC,SAD0B;IAE1BC,UAAU,EAAE,MAAM9C,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFQ;IAG1BM,OAAO,EAAE,MAAM/C,GAAG,CAACyC,UAAJ,CAAe,GAAf;EAHW,CAAhB,CAAZ;AAKD,CAXM;;;;AAaA,MAAMe,WAAW,GAAG,OAAOzD,GAAP,EAAYC,GAAZ,KAAoB;EAC7CL,MAAM,CAACmB,QAAP,CACG2C,MADH,CACU;IACNb,EAAE,EAAG7C,GAAG,CAAC2D,IAAJ,CAASC,IADR;IAENP,aAAa,EAAErD,GAAG,CAAC2D,IAAJ,CAASE,SAFlB;IAGNC,WAAW,EAAE9D,GAAG,CAAC2D,IAAJ,CAASI,OAHhB;IAIN/B,YAAY,EAAE,CAJR;IAKNF,cAAc,EAAE9B,GAAG,CAAC2D,IAAJ,CAAShD,aALnB;IAMNqD,WAAW,EAAEhE,GAAG,CAAC2D,IAAJ,CAASK,WANhB;IAONC,IAAI,EAAEjE,GAAG,CAAC2D,IAAJ,CAASM,IAPT;IAQNC,eAAe,EAAElE,GAAG,CAAC2D,IAAJ,CAASQ,SARpB;IASNC,YAAY,EAAEpE,GAAG,CAAC2D,IAAJ,CAASU,MATjB;IAUNC,KAAK,EAAEtE,GAAG,CAAC2D,IAAJ,CAASW,KAVV;IAWNC,GAAG,EAAEvE,GAAG,CAAC2D,IAAJ,CAASY,GAXR;IAYNC,IAAI,EAAExE,GAAG,CAAC2D,IAAJ,CAASa,IAZT;IAaNC,KAAK,EAAEzE,GAAG,CAAC2D,IAAJ,CAASc,KAbV;IAcNC,EAAE,EAAE1E,GAAG,CAAC2D,IAAJ,CAASe,EAdP;IAeNC,QAAQ,EAAE3E,GAAG,CAAC2D,IAAJ,CAASgB,QAfb;IAgBNC,GAAG,EAAE5E,GAAG,CAAC2D,IAAJ,CAASiB,GAhBR;IAiBNC,oBAAoB,EAAE7E,GAAG,CAAC2D,IAAJ,CAASmB,mBAjBzB;IAkBNC,mBAAmB,EAAE/E,GAAG,CAAC2D,IAAJ,CAASqB,kBAlBxB;IAmBNC,IAAI,EAAE;EAnBA,CADV,EAsBG9C,IAtBH,CAuBKpB,QAAD,IAAcd,GAAG,CAACiF,MAAJ,CAAW,GAAX,EAAgB9C,IAAhB,CAAqB;IAAES,EAAE,EAAE9B,QAAQ,CAAC8B;EAAf,CAArB,CAvBlB,EAyBGJ,KAzBH,CAyBU0C,KAAD,IAAW;IAChB,IAAIA,KAAK,IAAI,kDAAb,EAAiE;MAC/DlF,GAAG,CAACiF,MAAJ,CAAW,GAAX,EAAgB9C,IAAhB,CAAqB,0DAArB;IACD,CAFD,MAEO;MACLgD,OAAO,CAACC,GAAR,CAAa,mDAAkDF,KAAM,EAArE;MACAlF,GAAG,CAACyC,UAAJ,CAAe,GAAf;IACD;EACF,CAhCH;AAiCD,CAlCM;;;;AAoCA,MAAM4C,aAAa,GAAG,OAAOtF,GAAP,EAAYC,GAAZ,KAAoB;EAC/C,MAAM6C,SAAS,GAAI/B,QAAD,IAClBA,QAAQ,CACHwE,MADL,CAEM;IACElC,aAAa,EAAErD,GAAG,CAAC2D,IAAJ,CAASE,SAD1B;IAEEC,WAAW,EAAE9D,GAAG,CAAC2D,IAAJ,CAASI,OAFxB;IAGE/B,YAAY,EAAEhC,GAAG,CAAC2D,IAAJ,CAAS/C,QAHzB;IAIEkB,cAAc,EAAE9B,GAAG,CAAC2D,IAAJ,CAAShD,aAJ3B;IAKEqD,WAAW,EAAEhE,GAAG,CAAC2D,IAAJ,CAASK,WALxB;IAMEC,IAAI,EAAEjE,GAAG,CAAC2D,IAAJ,CAASM,IANjB;IAOEC,eAAe,EAAElE,GAAG,CAAC2D,IAAJ,CAASQ,SAP5B;IAQEC,YAAY,EAAEpE,GAAG,CAAC2D,IAAJ,CAASU,MARzB;IASEC,KAAK,EAAEtE,GAAG,CAAC2D,IAAJ,CAASW,KATlB;IAUEC,GAAG,EAAEvE,GAAG,CAAC2D,IAAJ,CAASY,GAVhB;IAWEC,IAAI,EAAExE,GAAG,CAAC2D,IAAJ,CAASa,IAXjB;IAYEC,KAAK,EAAEzE,GAAG,CAAC2D,IAAJ,CAASc,KAZlB;IAaEC,EAAE,EAAE1E,GAAG,CAAC2D,IAAJ,CAASe,EAbf;IAcEC,QAAQ,EAAE3E,GAAG,CAAC2D,IAAJ,CAASgB,QAdrB;IAeEC,GAAG,EAAE5E,GAAG,CAAC2D,IAAJ,CAASiB,GAfhB;IAgBEC,oBAAoB,EAAE7E,GAAG,CAAC2D,IAAJ,CAASmB,mBAhBjC;IAiBEC,mBAAmB,EAAE/E,GAAG,CAAC2D,IAAJ,CAASqB;EAjBhC,CAFN,EAqBM;IAAEQ,MAAM,EAAE,CAAC,eAAD,EAAkB,aAAlB,EAAiC,cAAjC,EAAgD,gBAAhD,EAAiE,aAAjE,EAA+E,MAA/E,EAAsF,iBAAtF,EAAwG,aAAxG,EAAsH,cAAtH,EAAqI,OAArI,EAA6I,KAA7I,EAAmJ,MAAnJ,EAA0J,OAA1J,EAAkK,IAAlK,EAAuK,UAAvK,EAAkL,KAAlL,EAAwL,sBAAxL,EAA+M,qBAA/M;EAAV,CArBN,EAuBKrD,IAvBL,CAuBU,MAAMlC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAvBhB,EAyBKD,KAzBL,CAyBY0C,KAAD,IAAW;IAChB,IAAIA,KAAK,IAAI,kDAAb,EAAiE;MAC/DlF,GAAG,CACAiF,MADH,CACU,GADV,EAEG9C,IAFH,CAEQ,0DAFR;IAGD,CAJD,MAIO;MACLgD,OAAO,CAACC,GAAR,CACG,kDAAiDF,KAAM,EAD1D;MAGAlF,GAAG,CAACyC,UAAJ,CAAe,GAAf;IACD;EACF,CApCL,CADA;;EAsCIE,YAAY,CAAC5C,GAAG,CAACmD,MAAJ,CAAWN,EAAZ,EAAgB;IAC9BC,SAD8B;IAE9BC,UAAU,EAAE,MAAM9C,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFY;IAG9BM,OAAO,EAAE,MAAM/C,GAAG,CAACyC,UAAJ,CAAe,GAAf;EAHe,CAAhB,CAAZ;AAKL,CA5CM,C,CA8CP;;;;;AACO,MAAM+C,YAAY,GAAG,OAAOzF,GAAP,EAAYC,GAAZ,KAAoB;EAC9C,MAAM6C,SAAS,GAAI/B,QAAD,IAClBA,QAAQ,CACHwE,MADL,CAEM;IACEvD,YAAY,EAAE;EADhB,CAFN,EAKM;IAAEwD,MAAM,EAAE,CAAC,cAAD;EAAV,CALN,EAMMrD,IANN,CAMW,MAAMlC,GAAG,CAACyC,UAAJ,CAAe,GAAf,CANjB,EAOIgD,WAAW,CAAC3E,QAAQ,CAACsC,aAAV,CAPf,EAQI+B,OAAO,CAACC,GAAR,CAAYtE,QAAQ,CAACsC,aAArB,CARJ,EASMZ,KATN,CASa0C,KAAD,IAAW;IAAClF,GAAG,CAACiF,MAAJ,CAAW,GAAX;EAAgB,CATxC,CADA;;EAYItC,YAAY,CAAC5C,GAAG,CAACmD,MAAJ,CAAWN,EAAZ,EAAgB;IAC9BC,SAD8B;IAE9BC,UAAU,EAAE,MAAM9C,GAAG,CAACyC,UAAJ,CAAe,GAAf,CAFY;IAG9BM,OAAO,EAAE,MAAM/C,GAAG,CAACyC,UAAJ,CAAe,GAAf;EAHe,CAAhB,CAAZ;AAKL,CAlBM,C,CAoBP;;;;;AACA,MAAMgD,WAAW,GAAIC,UAAD,IAAgB;EAClC/F,MAAM,CAAC0B,QAAP,CAAgBiE,MAAhB,CACE;IAAEK,WAAW,EAAE,CAAf;IACEC,MAAM,EAAE;EADV,CADF,EAGE;IACEjE,KAAK,EAAE;MACLiB,EAAE,EAAE8C;IADC;EADT,CAHF;AASD,CAVD"}