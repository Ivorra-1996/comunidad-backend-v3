{"version":3,"file":"usuarios.js","names":["models","require","bcrypt","jwt","config","secret","process","env","SECRET","expireTime","EXPIRE","signUp","req","res","usuario","body","password","passwordLength","length","salt","genSalt","hashPassword","hash","minPasswordLength","usuarios","create","fk_id_grupo","estado","then","status","send","id","catch","error","sendStatus","signIn","findUsuario","findOne","where","compare","accessToken","generateAccessToken","header","json","message","grupo","token","sign","uid","expiresIn","getAll","findAll","attributes","include","as","model","grupos","findUsuarioPorId","onSuccess","onNotFound","onError","deleteUsuario","postulaciones","destroy","params"],"sources":["../../src/controllers/usuarios.js"],"sourcesContent":["const models = require(\"../../database/models\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\nrequire(\"dotenv\").config(\"../../.env\");\n\n//Esta config es para el JWT\nconst secret = process.env.SECRET;\nconst expireTime = process.env.EXPIRE;\n\n//Creamos un usuario\nexport const signUp = async (req, res) => {\n  //Nos traemos el usuario desde el body\n  const usuario = await req.body.usuario;\n  const password = await req.body.password;\n\n  //Obtenemos el largo de la password\n  const passwordLength = password.length;\n\n  //Con bcrypt generamos el salt y hasheamos la contraseña.\n  const salt = await bcrypt.genSalt();\n  const hashPassword = await bcrypt.hash(password, salt);\n\n  //largo de contraseña\n  const minPasswordLength = 6;\n\n  //Luego de algunas validaciones insertamos el usuario en la tabla o devolvemos un error.\n  if (passwordLength >= minPasswordLength) {\n    models.usuarios\n      .create({\n        usuario: usuario,\n        password: hashPassword,\n        fk_id_grupo: \"1\",\n        estado: \"0\",\n      })\n      .then((usuarios) => res.status(201).send({ id: usuarios.id }))\n      .catch((error) => {\n        //El usuario es unico y esta definido en el modelo\n        if (error == \"SequelizeUniqueConstraintError: Validation error\") {\n          res.status(402).send(\"Bad request: el usuario ya existe\");\n        } else {\n          res.sendStatus(400);\n        }\n      });\n  } else {\n    res\n      .status(401)\n      .send(\"Bad request: el usuario o la contraseña no son validos\");\n  }\n};\n\n//Consultamos un usuario\nexport const signIn = async (req, res) => {\n  //Nos traemos el usuario desde el body\n  const usuario = await req.body.usuario;\n  const password = await req.body.password;\n\n  //Buscamos si existe el usuario en la base\n  const findUsuario = await models.usuarios.findOne({\n    where: { usuario: usuario },\n  });\n  //Si el usuario existe validamos, sino devolvemos error\n  if (findUsuario !== null) {\n    //Si el hash de la password matchea con la que paso el usuario damos ok, sino error.\n    if (await bcrypt.compare(password, findUsuario.password)) {\n      //HORRIBLE pero es lo mas rapido. Refactorizar en cuanto se pueda.\n      if (findUsuario.estado) {\n        //Aca se llama a la funcion para generar la apikey\n        const accessToken = generateAccessToken(usuario);\n        res.header(\"authotization\", accessToken).json({\n          message: \"Usuario autenticado\",\n          id: findUsuario.id,\n          grupo: findUsuario.fk_id_grupo,\n          token: accessToken,\n        });\n      } else {\n        res.header(\"authotization\").json({\n          message: \"Usuario no completo formulario postulante\",\n          id: findUsuario.id,\n          grupo: findUsuario.fk_id_grupo,\n          estado: findUsuario.estado,\n        });\n      }\n    } else {\n      res.status(400).send(\"Usuario o password invalidos\");\n    }\n  } else {\n    res.status(400).send(\"Debe especificar usuario y password validos\");\n  }\n\n  function generateAccessToken(usuario) {\n    return jwt.sign({ uid: usuario }, secret, { expiresIn: expireTime });\n  }\n};\n\nexport const getAll = async (req, res) => {\n  models.usuarios\n    .findAll({\n      attributes: [\"id\", \"usuario\", \"fk_id_grupo\", \"estado\", \"createdAt\"],\n      include: [\n        {\n          as: \"Grupos\",\n          model: models.grupos,\n          attributes: [\"id\", \"descripcion\"],\n        },\n      ],\n    })\n    .then((usuarios) =>\n      res.send({\n        usuarios,\n      })\n    )\n    .catch(() => res.sendStatus(400));\n};\n\nconst findUsuarioPorId = (id, { onSuccess, onNotFound, onError }) => {\n  models.usuarios\n    .findOne({\n      where: { id },\n    })\n    .then((usuarios) => (usuarios ? onSuccess(usuarios) : onNotFound()))\n    .catch(() => onError());\n};\n\nexport const deleteUsuario = async (req, res) => {\n  const onSuccess = postulaciones =>\n  postulaciones\n      .destroy()\n      .then(() => res.sendStatus(200))\n      .catch(() => res.sendStatus(500));\n      findUsuarioPorId(req.params.id, {\n    onSuccess,\n    onNotFound: () => res.sendStatus(404),\n    onError: () => res.sendStatus(500)\n  });\n};"],"mappings":"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"}