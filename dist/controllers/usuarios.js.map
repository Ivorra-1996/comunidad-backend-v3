{"version":3,"file":"usuarios.js","names":["express","require","models","bcrypt","jwt","config","secret","process","env","SECRET","expireTime","EXPIRE","signUp","req","res","usuario","body","password","passwordLength","length","salt","genSalt","hashPassword","hash","minPasswordLength","usuarios","create","fk_id_grupo","estado","then","status","send","id","catch","error","sendStatus","signIn","console","log","findUsuario","findOne","where","compare","header","json","message","accessToken","generateAccessToken","token","sign","uid","expiresIn","getAll","findAll","attributes","include","as","model","grupos"],"sources":["../../src/controllers/usuarios.js"],"sourcesContent":["const express = require(\"express\");\nconst models = require(\"../../database/models\");\nvar bcrypt = require('bcrypt');\nvar jwt = require('jsonwebtoken')\nrequire('dotenv').config('./.env');\nconst secret = process.env.SECRET;\nconst expireTime = process.env.EXPIRE;\n\n\n\n//Creamos un usuario\nexport const signUp = async (req, res) => {\n  //Nos traemos el usuario desde el body\n  const usuario = await req.body.usuario;\n  const password = await req.body.password; \n\n  //Obtenemos el largo de la password\n  const passwordLength = password.length;\n\n  //Con bcrypt generamos el salt y hasheamos la contraseña.\n  const salt = await bcrypt.genSalt()\n  const hashPassword = await bcrypt.hash(password, salt);\n\n  //largo de contraseña\n  const minPasswordLength = 6\n\n//Luego de algunas validaciones insertamos el usuario en la tabla o devolvemos un error.\nif ( passwordLength >= minPasswordLength){\n  models.usuarios\n    .create({ \n        usuario: usuario,\n        password: hashPassword,\n        fk_id_grupo: '1',\n        estado: '0'})\n    .then(usuarios => res.status(201)\n    .send({ id: usuarios.id }))\n    .catch(error => {\n      //El usuario es unico y esta definido en el modelo\n      if (error == \"SequelizeUniqueConstraintError: Validation error\") {\n        res.status(402).send('Bad request: el usuario ya existe')\n      }\n      else {\n        res.sendStatus(400)\n      }\n    });\n  }else {\n    res.status(401).send('Bad request: el usuario o la contraseña no son validos')\n  }\n};\n\n//Consultamos un usuario\nexport const signIn = async (req, res) => {\n  //Nos traemos el usuario desde el body\n  const usuario = await req.body\n  \n  //const password = await req.body.password;  \n  console.log(\"imprimo usuario y pass\", usuario)\n  //Buscamos si existe el usuario en la base\n  const findUsuario =  await models.usuarios.findOne({ where: { usuario: usuario } });\n\n  //Si el usuario existe validamos, sino devolvemos error\n  if (findUsuario !== null){\n    console.log(\"datos del usuario\", findUsuario.estado)\n    //Si el hash de la password matchea con la que paso el usuario damos ok, sino error.\n    if (await bcrypt.compare(password, findUsuario.password)){\n      \n      //HORRIBLE pero es lo mas rapido. Refactorizar en cuanto se pueda.\n      if (!findUsuario.estado){\n        res.header('authotization').json({\n          message: 'Usuario no completo formulario postulante',\n          id: findUsuario.id,\n          estado: findUsuario.estado \n        })\n      }else{\n      //Aca se llama a la funcion para generar la apikey\n      const accessToken = generateAccessToken(usuario);\n      res.header('authotization', accessToken).json({\n        message: 'Usuario autenticado',\n        id: findUsuario.id,\n        token: accessToken\n      })\n      } \n    }else{\n      res.status(400).send('Usuario o password invalidos')\n    }\n  }else {\n    res.status(401).send('Debe especificar usuario y password validos')\n  }\n\n  function generateAccessToken(usuario){\n    return jwt.sign({uid: usuario}, secret, { expiresIn: expireTime })\n  }\n\n  };\n\nexport const getAll = async (req, res) => {\n  models.usuarios\n    .findAll({\n      attributes: [\"id\",\"usuario\",\"fk_id_grupo\",\"estado\",\"createdAt\"],\n      include: [\n        {\n          as: \"Grupos\",\n          model: models.grupos,\n          attributes: [\"id\", \"descripcion\"],\n        }\n      ]\n    }).then(usuarios => res.send({\n      usuarios\n    })).catch(() => res.sendStatus(400));\n};"],"mappings":"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"}